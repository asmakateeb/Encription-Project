/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encryproject;

import javax.swing.JOptionPane;

/**
 *
 * @author Ansam
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        ceaser = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        outputceaser = new javax.swing.JTextArea();
        encryptbtn = new javax.swing.JButton();
        decryptbtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        inputceasar = new javax.swing.JTextArea();
        keyceaser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        editedCeaser = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        encryptbtnEdit = new javax.swing.JButton();
        decryptbtnEdit = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        crack = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        resultcrack = new javax.swing.JTextArea();
        decryptbtnEdit1 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        plaintxt = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        encryptedtxt = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Parser project frame");
        setLocation(new java.awt.Point(200, 100));
        setMaximumSize(new java.awt.Dimension(573, 500));
        setName("main"); // NOI18N
        setPreferredSize(new java.awt.Dimension(700, 600));
        setSize(new java.awt.Dimension(700, 600));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jScrollPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(573, 500));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(573, 500));

        jPanel1.setBackground(new java.awt.Color(192, 212, 212));
        jPanel1.setAutoscrolls(true);
        jPanel1.setMinimumSize(new java.awt.Dimension(150, 150));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel14.setFont(new java.awt.Font("Agency FB", 0, 48)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 153, 153));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Substitution Caesar Project");

        ceaser.setBackground(new java.awt.Color(0, 0, 0));
        ceaser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        ceaser.setMaximumSize(new java.awt.Dimension(500, 250));
        ceaser.setPreferredSize(new java.awt.Dimension(500, 243));

        jLabel1.setForeground(new java.awt.Color(255, 153, 153));

        outputceaser.setColumns(20);
        outputceaser.setRows(5);
        jScrollPane3.setViewportView(outputceaser);

        encryptbtn.setText("encrypt");
        encryptbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptbtnActionPerformed(evt);
            }
        });

        decryptbtn.setText("decrypt");
        decryptbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptbtnActionPerformed(evt);
            }
        });

        inputceasar.setColumns(20);
        inputceasar.setRows(5);
        jScrollPane5.setViewportView(inputceasar);

        jLabel4.setForeground(new java.awt.Color(255, 204, 204));
        jLabel4.setText("Key is : ");

        javax.swing.GroupLayout ceaserLayout = new javax.swing.GroupLayout(ceaser);
        ceaser.setLayout(ceaserLayout);
        ceaserLayout.setHorizontalGroup(
            ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ceaserLayout.createSequentialGroup()
                .addGroup(ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ceaserLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ceaserLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ceaserLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(encryptbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keyceaser, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decryptbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        ceaserLayout.setVerticalGroup(
            ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ceaserLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(keyceaser)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(ceaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encryptbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decryptbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(307, 307, 307)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Caesar ", ceaser);

        editedCeaser.setBackground(new java.awt.Color(0, 0, 0));
        editedCeaser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        editedCeaser.setMaximumSize(new java.awt.Dimension(500, 250));
        editedCeaser.setPreferredSize(new java.awt.Dimension(500, 243));

        jLabel2.setForeground(new java.awt.Color(255, 153, 153));

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane4.setViewportView(jTextArea3);

        encryptbtnEdit.setText("encrypt");
        encryptbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptbtnEditActionPerformed(evt);
            }
        });

        decryptbtnEdit.setText("decrypt");
        decryptbtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptbtnEditActionPerformed(evt);
            }
        });

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane6.setViewportView(jTextArea4);

        jLabel5.setForeground(new java.awt.Color(255, 204, 204));
        jLabel5.setText("Key is : ");

        javax.swing.GroupLayout editedCeaserLayout = new javax.swing.GroupLayout(editedCeaser);
        editedCeaser.setLayout(editedCeaserLayout);
        editedCeaserLayout.setHorizontalGroup(
            editedCeaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editedCeaserLayout.createSequentialGroup()
                .addGroup(editedCeaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editedCeaserLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editedCeaserLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(editedCeaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(editedCeaserLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(editedCeaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editedCeaserLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(editedCeaserLayout.createSequentialGroup()
                                .addComponent(encryptbtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decryptbtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        editedCeaserLayout.setVerticalGroup(
            editedCeaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editedCeaserLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(editedCeaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(editedCeaserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encryptbtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decryptbtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Edited Caesar ", editedCeaser);

        crack.setBackground(new java.awt.Color(0, 0, 0));
        crack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153)));
        crack.setMaximumSize(new java.awt.Dimension(500, 250));
        crack.setPreferredSize(new java.awt.Dimension(500, 243));

        jLabel3.setForeground(new java.awt.Color(255, 153, 153));

        resultcrack.setColumns(20);
        resultcrack.setRows(5);
        jScrollPane7.setViewportView(resultcrack);

        decryptbtnEdit1.setText("crack");
        decryptbtnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptbtnEdit1ActionPerformed(evt);
            }
        });

        plaintxt.setColumns(20);
        plaintxt.setRows(5);
        jScrollPane9.setViewportView(plaintxt);

        encryptedtxt.setColumns(20);
        encryptedtxt.setRows(5);
        jScrollPane10.setViewportView(encryptedtxt);

        jLabel6.setForeground(new java.awt.Color(255, 204, 204));
        jLabel6.setText("encrypted text :");

        jLabel7.setForeground(new java.awt.Color(255, 204, 204));
        jLabel7.setText(" plain text :");

        javax.swing.GroupLayout crackLayout = new javax.swing.GroupLayout(crack);
        crack.setLayout(crackLayout);
        crackLayout.setHorizontalGroup(
            crackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crackLayout.createSequentialGroup()
                .addGroup(crackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(crackLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(crackLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(crackLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addGroup(crackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(crackLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane10))))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(crackLayout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(decryptbtnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(crackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(crackLayout.createSequentialGroup()
                    .addGap(39, 39, 39)
                    .addComponent(jScrollPane9)
                    .addGap(305, 305, 305)))
        );
        crackLayout.setVerticalGroup(
            crackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crackLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(crackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(decryptbtnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(crackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(crackLayout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(223, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("crack", crack);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptbtnActionPerformed
        String input = inputceasar.getText();
        if (input.length() == 0 || keyceaser.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Missing input");
        } else {
            outputceaser.setText("");
            int key = Integer.parseInt(keyceaser.getText());
            encryptceasar(input, key);

        }
    }//GEN-LAST:event_encryptbtnActionPerformed

    private void encryptbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptbtnEditActionPerformed
//        if (jTextArea2.getl)
        String input = jTextArea4.getText();
        if (input.length() == 0 || jTextField2.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Missing input");
        } else {
            jTextArea3.setText("");
            int key = Integer.parseInt(jTextField2.getText());
            encrypt(input, key);

        }

    }//GEN-LAST:event_encryptbtnEditActionPerformed

    private void decryptbtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptbtnEditActionPerformed
        String input = jTextArea4.getText();
        if (input.length() == 0 || jTextField2.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Missing input");
        } else {
            jTextArea3.setText("");
            int key = Integer.parseInt(jTextField2.getText());
            decrypt(key, input);

        }
    }//GEN-LAST:event_decryptbtnEditActionPerformed

    private void decryptbtnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptbtnEdit1ActionPerformed
        String plain = plaintxt.getText();
        String encypted = encryptbtn.getText();

        if (plain.length() == 0 || encypted.length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Missing input");
        } else {
            resultcrack.setText("");
            crack(plain, encypted);

        }
    }//GEN-LAST:event_decryptbtnEdit1ActionPerformed

    private void decryptbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptbtnActionPerformed

        String input = inputceasar.getText();
        if (input.length() == 0 || keyceaser.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Missing input");
        } else {
            outputceaser.setText("");
            int key = Integer.parseInt(keyceaser.getText());
            decryptceasar(input, key);
        }


    }//GEN-LAST:event_decryptbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ceaser;
    private javax.swing.JPanel crack;
    private javax.swing.JButton decryptbtn;
    private javax.swing.JButton decryptbtnEdit;
    private javax.swing.JButton decryptbtnEdit1;
    private javax.swing.JPanel editedCeaser;
    private javax.swing.JButton encryptbtn;
    private javax.swing.JButton encryptbtnEdit;
    private javax.swing.JTextArea encryptedtxt;
    private javax.swing.JTextArea inputceasar;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField keyceaser;
    private javax.swing.JTextArea outputceaser;
    private javax.swing.JTextArea plaintxt;
    private javax.swing.JTextArea resultcrack;
    // End of variables declaration//GEN-END:variables

    public void encrypt(String input, int key) {
        System.out.println("Encrypting.....");
        String output = "";
        char[] chs = input.toCharArray();
        for (int i = 0; i < chs.length; i++) {
            int value = chs[i];
            value = (value + key);
//                        jTextArea3.append((value + key));

            if (value > 'Z') {
                value -= 26;
            }
            output += (char) value;
            jTextArea3.append("replacing " + chs[i] + " with " + 
                    (char) value + System.getProperty("line.separator"));

        }

        jTextArea3.append(output);
    }

    public void decrypt(int key, String cipher) {
        jTextArea3.append("Decrypting.....");
        char[] chs = cipher.toCharArray();
        String output = "";
        for (int i = 0; i < chs.length; i++) {
            int value = chs[i] + (26 - key);
            if (value > 'Z') {
                value -= 26;
            }
            jTextArea3.append("the value of " + chs[i] + " correspond to " +
                    (char) value + System.getProperty("line.separator"));
            output += (char) value;
        }
        // System.out.println(" Original Text is "+output );
        jTextArea3.append(output);

    }

    public void crack(String decrypted, String encrypted) {
        char chs[] = decrypted.toCharArray();

        for (int i = 0; i < 26; i++) {
            String cracked = new String();
            for (int j = 0; j < chs.length; j++) {
                int value = chs[j];
                value = (value + i);
                if (value > 'Z') {
                    value -= 26;
                }
                cracked += (char) value;
            }
            resultcrack.append("cracked = " + cracked + System.getProperty("line.separator"));
            resultcrack.append(cracked + "==" + encrypted + "?" + System.getProperty("line.separator"));
            if (cracked.equals(encrypted)) {
                resultcrack.append("the key is " + i % 26 + System.getProperty("line.separator"));
                }

        }
        resultcrack.append("NO Keys found" +System.getProperty("line.separator"));
    }

    private void encryptceasar(String input, int key) {
        input.toLowerCase();
        for (int i = 0; i < input.length(); i++) {
            char ch = (char) (((int) input.charAt(i)
                    + key - 97) % 26 + 97);
            outputceaser.append(ch + "");

        }
    }

    private void decryptceasar(String input, int key) {

        for (int i = 0; i < input.length(); i++) {
            if (Character.isUpperCase(input.charAt(i))) {
                char ch = (char) (((int) input.charAt(i)
                        - key - 65) % 26 + 65);
                outputceaser.append(ch + "");
            } else {
                char ch = (char) (((int) input.charAt(i)
                        - key - 97) % 26 + 97);
                outputceaser.append(ch + "");
            }
        }
    }

}
